{"ast":null,"code":"var _jsxFileName = \"/home/umar/Desktop/web development/socket.io_with_react.js/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:8000/');\n\nfunction App() {\n  _s();\n\n  const [message, setMessage] = useState('');\n  const [chat, setChat] = useState([]);\n  console.log('server data', chat);\n  useEffect(() => {\n    socket.on('message', payload => {\n      setChat([...chat, payload]);\n    });\n  }, []);\n\n  const sendMessage = e => {\n    socket.emit('message', {\n      message\n    });\n    setMessage('');\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 8\n    }, this), chat.map(chat => /*#__PURE__*/_jsxDEV(\"h5\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 27\n    }, this)), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMessage,\n      action: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"message\",\n        placeholder: \"Type message\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"fi/IGQg4eRn1At1LK6QvoIC5kKc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/umar/Desktop/web development/socket.io_with_react.js/client/src/App.js"],"names":["React","useState","useEffect","io","socket","App","message","setMessage","chat","setChat","console","log","on","payload","sendMessage","e","emit","preventDefault","map","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,EAAP,MAAe,kBAAf;;AAEA,MAAMC,MAAM,GAAGD,EAAE,CAAC,wBAAD,CAAjB;;AAEA,SAASE,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0BH,IAA1B;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,MAAM,CAACQ,EAAP,CAAU,SAAV,EAAqBC,OAAO,IAAI;AAC9BJ,MAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAUK,OAAV,CAAD,CAAP;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMC,WAAW,GAAIC,CAAD,IAAO;AACzBX,IAAAA,MAAM,CAACY,IAAP,CAAY,SAAZ,EAAuB;AAACV,MAAAA;AAAD,KAAvB;AACAC,IAAAA,UAAU,CAAC,EAAD,CAAV;AACAQ,IAAAA,CAAC,CAACE,cAAF;AACD,GAJD;;AAMA,sBACE;AAAA,4BACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,EAIKT,IAAI,CAACU,GAAL,CAASV,IAAI,iBAAI;AAAA;AAAA;AAAA;AAAA,YAAjB,CAJL,eAMG;AAAM,MAAA,QAAQ,EAAEM,WAAhB;AAA6B,MAAA,MAAM,EAAC,EAApC;AAAA,8BACG;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,SAFP;AAGE,QAAA,WAAW,EAAC,cAHd;AAIE,QAAA,KAAK,EAAER,OAJT;AAKE,QAAA,QAAQ,EAAES,CAAC,IAAIR,UAAU,CAACQ,CAAC,CAACI,MAAF,CAASC,KAAV,CAL3B;AAME,QAAA,QAAQ;AANV;AAAA;AAAA;AAAA;AAAA,cADH,eASG;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATH;AAAA;AAAA;AAAA;AAAA;AAAA,YANH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GArCQf,G;;KAAAA,G;AAuCT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\n\nconst socket = io('http://localhost:8000/')\n\nfunction App() {\n  const [message, setMessage] = useState('');\n  const [chat, setChat] = useState([]);\n  console.log('server data',chat);\n\n  useEffect(() => {\n    socket.on('message', payload => {\n      setChat([...chat, payload])\n    })\n  }, [])\n\n  const sendMessage = (e) => {\n    socket.emit('message', {message})\n    setMessage('');\n    e.preventDefault();\n  }\n\n  return (\n    <div>\n       <h1>hello</h1>\n       {/* <h3>{msg}</h3> */}\n       {\n         chat.map(chat => <h5></h5>)\n       }\n       <form onSubmit={sendMessage} action=\"\">\n          <input \n            type=\"text\" \n            name='message'\n            placeholder='Type message'\n            value={message}         \n            onChange={e => setMessage(e.target.value)}\n            required\n          />\n          <button type='submit'>send</button>\n       </form>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}